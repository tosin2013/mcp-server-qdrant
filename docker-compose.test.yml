services:
  tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    command: >
      bash -c "
        pip install -e . &&
        pip install fastapi &&
        mkdir -p /app/coverage &&
        echo 'Waiting for Qdrant to be ready...' &&
        for i in {1..30}; do
          echo \"Attempt $i/30: Connecting to Qdrant...\"
          if curl -s http://qdrant:6333/collections > /dev/null; then
            echo \"Successfully connected to Qdrant!\"
            break
          fi
          if [ $i -eq 30 ]; then
            echo \"Failed to connect to Qdrant after 30 attempts\"
            exit 1
          fi
          sleep 2
        done &&
        pytest tests/ -v --cov=mcp_server_qdrant --cov-report=xml:/app/coverage/coverage.xml
      "
    environment:
      - QDRANT_URL=http://qdrant:6333
      - COLLECTION_NAME=test-collection
      - EMBEDDING_PROVIDER=fastembed
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - PYTEST_CURRENT_TEST=true
      - SKIP_DOCKER_TESTS=true  # Skip Docker-related tests
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./docs:/app/docs
      - ./coverage:/app/coverage
      - ./pyproject.toml:/app/pyproject.toml
      - ./requirements.txt:/app/requirements.txt
      - ./README.md:/app/README.md
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket (may not work in all environments)
    depends_on:
      qdrant:
        condition: service_healthy  # Wait for Qdrant to be healthy before starting tests
    networks:
      - mcp-network

  qdrant:
    image: qdrant/qdrant:latest
    environment:
      - QDRANT_ALLOW_EMPTY_API_KEY=1
      - QDRANT_ALLOW_RECOVERY=true
      - QDRANT_FORCE_BACKUP=true
      - QDRANT_SERVICE_PORT=6333
      - QDRANT_INIT_MEMORY_MB=512
      - RUST_LOG=info
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - mcp-network
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65535
        hard: 65535

volumes:
  qdrant_data:
    driver: local

networks:
  mcp-network:
    driver: bridge 